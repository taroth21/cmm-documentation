<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
                         "concept.dtd" [<!ENTITY % entities PUBLIC '-//XDOC//ENTITIES//FujitsuUserDoc' 'entities.dtd'>
]>
<!-- Copyright FUJITSU LIMITED 2017 -->
<concept id="concept_E8D43EB4494E41D2AB42D4A89396D1AB"
            xml:lang="en-us">
    <title><ph
                    conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"/> Architecture and Components</title>
    <conbody>
        <section>
            <p>The following illustration provides an overview of the main components of <ph
                    conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"/> and their interaction: </p>
            <fig>
                <image
                    alt="cmm-architecture.png" height="260"
                    href="../../images/cmm-architecture.png"
            width="435"/>
            </fig>
        </section>
        <section
            conref="../../tenantuser/intro/c-tucomponents-new.xml#concept_E8D43EB4494E41D2AB42D4A89396D1AB/OpenStack_concept_conbody_section_2"/>
        <section
                    id="Service_concept_conbody_section_3">
            <title>Monitoring Service</title>
            <p id="The_concept_conbody_section_3_p">The Monitoring Service is the central <ph
                    conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                /> component. It is responsible for receiving, persisting, and processing monitoring and log data, as well as providing the data to the users.</p>
            <p>The Monitoring Service relies on Monasca, an open source Monitoring as a Service solution. It uses Monasca for high-speed metrics querying and integrates the Threshold Engine (streaming alarm engine) and the Notification Engine of Monasca.</p>
        </section>
        <section>
            <p>The Monitoring Service consists of the following components:</p>
            <p>
                <ul>
                    <li><b>Monitoring API</b><p>A RESTful API for monitoring. It is primarily focused on the following areas: </p><ul>
                            <li>
                                <p>Metrics: Store and query massive amounts of metrics in real time. </p>
                            </li>
                            <li>
                                <p>Statistics: Provide statistics for metrics. </p>
                            </li>
                            <li>
                                <p>Alarm Definitions: Create, update, query, and delete alarm definitions. </p>
                            </li>
                            <li>
                                <p>Alarms: Query and delete the alarm history. </p>
                            </li>
                            <li>
                                <p>Notification Methods: Create and delete notification methods and associate them with alarms. Users can be notified directly when alarms are triggered, for example, via email.</p>
                            </li>
                        </ul></li>
                    <li><b>Message Queue</b><p>A component that primarily receives published metrics from the Monitoring API, alarm state transition messages from the Threshold Engine, and log data from the Log API. The data is consumed by other components, such as the Persister, the Notification Engine, and the Log Persister. The Message Queue is also used to publish and consume other events in the system. It is based on Kafka, a high-performance, distributed, fault-tolerant, and scalable message queue with durability built-in. For administrating the Message Queue, <ph
                                conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"/> uses Zookeeper, a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services.</p></li>
                    <li><b>Persister</b>
                        <p>A Monasca component that consumes metrics and alarm state transitions from the Message Queue and stores them in the Metrics and Alarms Database (InfluxDB). </p></li>
                    <li><b>Notification Engine</b>
                        <p>A Monasca component that consumes alarm state transition messages from the Message Queue and sends notifications for alarms, such as emails. </p></li>
                    <li><b>Threshold Engine</b>
                        <p>A Monasca component that computes thresholds on metrics and publishes alarms to the Message Queue when they are triggered. The Threshold Engine is based on Apache Storm, a free and open distributed real-time computation system.</p></li>
                    <li><b>Metrics and Alarms Database</b><p>An InfluxDB database used for storing metrics and the alarm history.</p></li>
                    <li>
                        <p><b>Config Database</b></p>
                        <p>A MariaDB database used for storing configuration information, alarm definitions, and notification methods. </p>
                    </li>
                    <li><b>Log API</b>
                        <p>A RESTful API for log management. It gathers log data from the Log Agents and forwards it to the Message Queue. </p><p>The <ph
                                conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                            /> log management is based on Logstash, a tool for receiving, processing, and publishing all kinds of logs. It provides a powerful pipeline for querying and analyzing logs. Elasticsearch is used as the back-end datastore, and Kibana as the front-end tool for retrieving and visualizing the log data.</p></li>
                    <li><b>Log Transformer</b>
                        <p>A Logstash component that consumes the log data from the Message Queue, performs transformation and aggregation operations on the data, and publishes the data that it creates back to the Message Queue.</p></li>
                    <li><b>Log Metrics</b>
                        <p>A Monasca component that consumes log data from the Message Queue, filters the data according to severity, and generates metrics for specific severities, for example, for errors or warnings. The generated metrics are published to the Message Queue and can be further processed by the Threshold Engine like any other metrics. </p></li>
                    <li><b>Log Persister </b><p>A Logstash component that consumes the transformed and aggregated log data from the Message Queue and stores it in the Log Database.</p></li>
                    <li><b>Kibana Server</b>
                        <p>A Web browser-based analytics and search interface to the Log Database.</p></li>
                    <li><b>Log Database</b><p>An Elasticsearch database for storing the log data. </p></li>
                </ul>
            </p>
           <!-- <note
                        othertype="note">
                <p>The installation of the Monitoring Service includes the installation of all <ph
                        conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                        /> third-party components that are required. From time to time, it may be necessary to install bug fixes or security patches for these third-party components. In order to guarantee for the interoperability and integrity of your <ph
                        conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"
                        /> installation, you should obtain such fixes and patches solely from your <ph
                        conref="../../shared/product-name.xml#ProductNameTopic/Product_Abbr"/> support organization.</p>
            </note>-->
        </section>
        <section
            conref="../../osoperator/intro/c-osocomponents.xml#concept_E8D43EB4494E41D2AB42D4A89396D1AB/Horizon_Plugin_concept_conbody_section_4"/>
        <section
            conref="../../overview/whatiscmm/c-components.xml#concept_E8D43EB4494E41D2AB42D4A89396D1AB/Metrics_Agent_concept_conbody_section_5"/>
        <section conref="../../overview/whatiscmm/c-components.xml#concept_E8D43EB4494E41D2AB42D4A89396D1AB/Log_Agent_concept_conbody_section_6"/>
    </conbody>
</concept>
